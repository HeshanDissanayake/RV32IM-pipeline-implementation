$date
	Tue Aug 10 23:13:44 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbenchCPU $end
$var wire 1 ! MAIN_MEM_READ $end
$var wire 3 " memWrite [2:0] $end
$var wire 4 # memRead [3:0] $end
$var wire 1 $ insReadEn $end
$var wire 32 % WRITE_DATA [31:0] $end
$var wire 32 & READ_DATA [31:0] $end
$var wire 32 ' PC [31:0] $end
$var wire 1 ( MAIN_M_READ $end
$var wire 128 ) MAIN_MEM_WRITE_DATA [127:0] $end
$var wire 1 * MAIN_MEM_WRITE $end
$var wire 128 + MAIN_MEM_READ_DATA [127:0] $end
$var wire 1 , MAIN_MEM_BUSY_WAIT $end
$var wire 28 - MAIN_MEM_ADDRESS [27:0] $end
$var wire 128 . INS_MEM_READ_DATA [127:0] $end
$var wire 1 / INS_MEM_READ $end
$var wire 1 0 INS_MEM_BUSY_WAIT $end
$var wire 28 1 INS_MEM_ADDRESS [27:0] $end
$var wire 1 2 INS_CACHE_BUSY_WAIT $end
$var wire 32 3 INS [31:0] $end
$var wire 1 4 BUSY_WAIT $end
$var wire 32 5 ADDRESS [31:0] $end
$var reg 1 6 CLK $end
$var reg 1 7 RESET $end
$scope module myCacheMemory $end
$var wire 1 8 TAG_MATCH $end
$var wire 1 6 clock $end
$var wire 1 7 reset $end
$var wire 32 9 writedata [31:0] $end
$var wire 3 : write [2:0] $end
$var wire 25 ; tag [24:0] $end
$var wire 4 < read [3:0] $end
$var wire 2 = offset [1:0] $end
$var wire 3 > index [2:0] $end
$var wire 2 ? byte_offset [1:0] $end
$var wire 32 @ address [31:0] $end
$var wire 128 A MAIN_MEM_READ_DATA [127:0] $end
$var wire 1 , MAIN_MEM_BUSY_WAIT $end
$var reg 128 B CURRENT_DATA [127:0] $end
$var reg 1 C CURRENT_DIRTY $end
$var reg 25 D CURRENT_TAG [24:0] $end
$var reg 1 E CURRENT_VALID $end
$var reg 28 F MAIN_MEM_ADDRESS [27:0] $end
$var reg 1 ( MAIN_MEM_READ $end
$var reg 1 * MAIN_MEM_WRITE $end
$var reg 128 G MAIN_MEM_WRITE_DATA [127:0] $end
$var reg 1 4 busywait $end
$var reg 32 H cache_readdata [31:0] $end
$var reg 32 I cache_writedata [31:0] $end
$var reg 2 J next_state [1:0] $end
$var reg 1 K readCache $end
$var reg 1 L readaccess $end
$var reg 32 M readdata [31:0] $end
$var reg 2 N state [1:0] $end
$var reg 1 O writeCache $end
$var reg 1 P writeCache_mem $end
$var reg 32 Q write_mask [31:0] $end
$var reg 1 R writeaccess $end
$var integer 32 S i [31:0] $end
$upscope $end
$scope module myDataMem $end
$var wire 28 T address [27:0] $end
$var wire 1 6 clock $end
$var wire 1 ! read $end
$var wire 1 7 reset $end
$var wire 1 * write $end
$var wire 128 U writedata [127:0] $end
$var reg 1 , busywait $end
$var reg 1 V readaccess $end
$var reg 128 W readdata [127:0] $end
$var reg 1 X writeaccess $end
$var integer 32 Y i [31:0] $end
$upscope $end
$scope module myInsCacheMemory $end
$var wire 1 Z TAG_MATCH $end
$var wire 1 6 clock $end
$var wire 1 7 reset $end
$var wire 3 [ tag [2:0] $end
$var wire 1 $ read $end
$var wire 2 \ offset [1:0] $end
$var wire 3 ] index [2:0] $end
$var wire 32 ^ address [31:0] $end
$var wire 128 _ MAIN_MEM_READ_DATA [127:0] $end
$var wire 1 0 MAIN_MEM_BUSY_WAIT $end
$var reg 32 ` CURRENT_DATA [31:0] $end
$var reg 3 a CURRENT_TAG [2:0] $end
$var reg 1 b CURRENT_VALID $end
$var reg 28 c MAIN_MEM_ADDRESS [27:0] $end
$var reg 1 / MAIN_MEM_READ $end
$var reg 1 2 busywait $end
$var reg 2 d next_state [1:0] $end
$var reg 1 e readCache $end
$var reg 1 f readaccess $end
$var reg 32 g readdata [31:0] $end
$var reg 2 h state [1:0] $end
$var reg 1 i writeCache_mem $end
$var integer 32 j i [31:0] $end
$upscope $end
$scope module myInsMem $end
$var wire 28 k address [27:0] $end
$var wire 1 6 clock $end
$var wire 1 / read $end
$var reg 1 0 busywait $end
$var reg 1 l readaccess $end
$var reg 128 m readdata [127:0] $end
$upscope $end
$scope module mycpu $end
$var wire 1 6 CLK $end
$var wire 1 4 DATA_CACHE_BUSY_WAIT $end
$var wire 32 n DATA_CACHE_DATA [31:0] $end
$var wire 32 o DATA_CACHE_READ_DATA [31:0] $end
$var wire 32 p INSTRUCTION [31:0] $end
$var wire 1 2 INS_CACHE_BUSY_WAIT $end
$var wire 1 7 RESET $end
$var wire 4 q memReadEn [3:0] $end
$var wire 3 r memWriteEn [2:0] $end
$var wire 2 s REG_WRITE_SELECT_S2 [1:0] $end
$var wire 1 t REG_WRITE_EN_S2 $end
$var wire 32 u REG_WRITE_DATA [31:0] $end
$var wire 32 v PC_PLUS_4_2 [31:0] $end
$var wire 32 w PC_PLUS_4 [31:0] $end
$var wire 32 x PC_NEXT [31:0] $end
$var wire 1 y OPERAND2_SEL $end
$var wire 1 z OPERAND1_SEL $end
$var wire 3 { MEM_WRITE_S2 [2:0] $end
$var wire 4 | MEM_READ_S2 [3:0] $end
$var wire 4 } IMMEDIATE_SELECT [3:0] $end
$var wire 32 ~ IMMEDIATE_OUT_S2 [31:0] $end
$var wire 32 !" DATA_CACHE_ADDR [31:0] $end
$var wire 32 "" DATA2_S2 [31:0] $end
$var wire 32 #" DATA1_S2 [31:0] $end
$var wire 1 $" BRANCH_SELECT_OUT $end
$var wire 4 %" BRANCH_SELECT [3:0] $end
$var wire 5 &" ALU_SELECT [4:0] $end
$var wire 32 '" ALU_OUT [31:0] $end
$var wire 32 (" ALU_IN_2 [31:0] $end
$var wire 32 )" ALU_IN_1 [31:0] $end
$var reg 32 *" PC [31:0] $end
$var reg 32 +" PR_ALU_OUT_S3 [31:0] $end
$var reg 32 ," PR_ALU_OUT_S4 [31:0] $end
$var reg 5 -" PR_ALU_SELECT [4:0] $end
$var reg 4 ." PR_BRANCH_SELECT_S2 [3:0] $end
$var reg 32 /" PR_DATA_1_S2 [31:0] $end
$var reg 32 0" PR_DATA_2_S2 [31:0] $end
$var reg 32 1" PR_DATA_2_S3 [31:0] $end
$var reg 32 2" PR_DATA_CACHE_OUT [31:0] $end
$var reg 32 3" PR_IMMEDIATE_SELECT_OUT [31:0] $end
$var reg 32 4" PR_INSTRUCTION [31:0] $end
$var reg 4 5" PR_MEM_READ_S2 [3:0] $end
$var reg 4 6" PR_MEM_READ_S3 [3:0] $end
$var reg 3 7" PR_MEM_WRITE_S2 [2:0] $end
$var reg 3 8" PR_MEM_WRITE_S3 [2:0] $end
$var reg 1 9" PR_OPERAND1_SEL $end
$var reg 1 :" PR_OPERAND2_SEL $end
$var reg 32 ;" PR_PC_S1 [31:0] $end
$var reg 32 <" PR_PC_S2 [31:0] $end
$var reg 32 =" PR_PC_S3 [31:0] $end
$var reg 32 >" PR_PC_S4 [31:0] $end
$var reg 5 ?" PR_REGISTER_WRITE_ADDR_S2 [4:0] $end
$var reg 5 @" PR_REGISTER_WRITE_ADDR_S3 [4:0] $end
$var reg 5 A" PR_REGISTER_WRITE_ADDR_S4 [4:0] $end
$var reg 1 B" PR_REG_WRITE_EN_S2 $end
$var reg 1 C" PR_REG_WRITE_EN_S3 $end
$var reg 1 D" PR_REG_WRITE_EN_S4 $end
$var reg 2 E" PR_REG_WRITE_SELECT_S2 [1:0] $end
$var reg 2 F" PR_REG_WRITE_SELECT_S3 [1:0] $end
$var reg 2 G" PR_REG_WRITE_SELECT_S4 [1:0] $end
$var reg 1 $ insReadEn $end
$scope module muxjump $end
$var wire 32 H" INPUT1 [31:0] $end
$var wire 1 $" SELECT $end
$var wire 32 I" INPUT2 [31:0] $end
$var reg 32 J" RESULT [31:0] $end
$upscope $end
$scope module myAlu $end
$var wire 32 K" INTER_AND [31:0] $end
$var wire 32 L" INTER_FWD [31:0] $end
$var wire 32 M" INTER_OR [31:0] $end
$var wire 32 N" INTER_XOR [31:0] $end
$var wire 5 O" SELECT [4:0] $end
$var wire 32 P" INTER_SUB [31:0] $end
$var wire 32 Q" INTER_SRL [31:0] $end
$var wire 32 R" INTER_SRA [31:0] $end
$var wire 32 S" INTER_SLTU [31:0] $end
$var wire 32 T" INTER_SLT [31:0] $end
$var wire 32 U" INTER_SLL [31:0] $end
$var wire 32 V" INTER_REMU [31:0] $end
$var wire 32 W" INTER_REM [31:0] $end
$var wire 32 X" INTER_MULHU [31:0] $end
$var wire 32 Y" INTER_MULHSU [31:0] $end
$var wire 32 Z" INTER_MUL [31:0] $end
$var wire 32 [" INTER_DIV [31:0] $end
$var wire 32 \" INTER_ADD [31:0] $end
$var wire 32 ]" DATA2 [31:0] $end
$var wire 32 ^" DATA1 [31:0] $end
$var reg 32 _" RESULT [31:0] $end
$upscope $end
$scope module myBranchSelect $end
$var wire 32 `" DATA1 [31:0] $end
$var wire 32 a" DATA2 [31:0] $end
$var wire 4 b" SELECT [3:0] $end
$var wire 1 c" BNE $end
$var wire 1 d" BLTU $end
$var wire 1 e" BLT $end
$var wire 1 f" BGEU $end
$var wire 1 g" BGE $end
$var wire 1 h" BEQ $end
$var reg 1 $" MUX_OUT $end
$upscope $end
$scope module myControl $end
$var wire 32 i" INSTRUCTION [31:0] $end
$var wire 1 7 RESET $end
$var wire 1 j" funct3_mux_select $end
$var wire 1 z oparand_1_select $end
$var wire 1 y oparand_2_select $end
$var wire 1 t reg_file_write $end
$var wire 2 k" reg_write_select [1:0] $end
$var wire 7 l" opcode [6:0] $end
$var wire 3 m" main_mem_write [2:0] $end
$var wire 4 n" main_mem_read [3:0] $end
$var wire 4 o" immediate_select [3:0] $end
$var wire 7 p" funct7 [6:0] $end
$var wire 3 q" funct3 [2:0] $end
$var wire 4 r" branch_control [3:0] $end
$var wire 5 s" alu_signal [4:0] $end
$scope module funct3_mux $end
$var wire 3 t" INPUT1 [2:0] $end
$var wire 3 u" INPUT2 [2:0] $end
$var wire 1 j" SELECT $end
$var reg 3 v" RESULT [2:0] $end
$upscope $end
$upscope $end
$scope module myImmediate $end
$var wire 32 w" INST [31:0] $end
$var wire 4 x" SELECT [3:0] $end
$var wire 5 y" TYPE6 [4:0] $end
$var wire 12 z" TYPE5 [11:0] $end
$var wire 12 {" TYPE4 [11:0] $end
$var wire 12 |" TYPE3 [11:0] $end
$var wire 20 }" TYPE2 [19:0] $end
$var wire 20 ~" TYPE1 [19:0] $end
$var reg 32 !# OUT [31:0] $end
$upscope $end
$scope module myreg $end
$var wire 1 6 CLK $end
$var wire 5 "# INADDRESS [4:0] $end
$var wire 32 ## OUT1 [31:0] $end
$var wire 5 $# OUT1ADDRESS [4:0] $end
$var wire 32 %# OUT2 [31:0] $end
$var wire 5 &# OUT2ADDRESS [4:0] $end
$var wire 1 7 RESET $end
$var wire 1 D" WRITE $end
$var wire 32 '# IN [31:0] $end
$var integer 32 (# i [31:0] $end
$upscope $end
$scope module oparand1_mux $end
$var wire 32 )# INPUT1 [31:0] $end
$var wire 32 *# INPUT2 [31:0] $end
$var wire 1 9" SELECT $end
$var reg 32 +# RESULT [31:0] $end
$upscope $end
$scope module oparand2_mux $end
$var wire 32 ,# INPUT1 [31:0] $end
$var wire 32 -# INPUT2 [31:0] $end
$var wire 1 :" SELECT $end
$var reg 32 .# RESULT [31:0] $end
$upscope $end
$scope module regWriteSelMUX $end
$var wire 32 /# INPUT1 [31:0] $end
$var wire 32 0# INPUT2 [31:0] $end
$var wire 32 1# INPUT3 [31:0] $end
$var wire 32 2# INPUT4 [31:0] $end
$var wire 2 3# SELECT [1:0] $end
$var reg 32 4# RESULT [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 4#
b0 3#
b0 2#
bx 1#
b0 0#
b100 /#
bx .#
bx -#
bx ,#
bx +#
b0 *#
bx )#
bx (#
b100 '#
bx &#
bx %#
bx $#
bx ##
b0 "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
b0 v"
b0 u"
bx t"
bx000 s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
xj"
bx i"
xh"
xg"
xf"
xe"
xd"
xc"
bx b"
bx a"
bx `"
b0 _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx000 O"
bx N"
bx M"
bx L"
bx K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
bx E"
0D"
0C"
xB"
b0 A"
b0 @"
b0 ?"
b100 >"
b0 ="
b0 <"
b11111111111111111111111111111100 ;"
x:"
x9"
b0 8"
bx 7"
b0 6"
bx 5"
bx 4"
bx 3"
bx 2"
b0 1"
bx 0"
bx /"
bx ."
bx000 -"
b0 ,"
bx +"
b11111111111111111111111111111100 *"
bx )"
bx ("
b0 '"
bx000 &"
bx %"
x$"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
xz
xy
b0 x
b0 w
b100 v
b100 u
xt
bx s
b0 r
b0 q
bx p
bx o
b0 n
bx m
0l
bx k
b1000 j
xi
b0 h
bx g
xf
xe
b0 d
bx c
xb
bx a
bx `
bx _
b11111111111111111111111111111100 ^
b111 ]
b11 \
b111 [
xZ
b100000000 Y
0X
bx W
0V
bx U
bx T
b1000 S
0R
b11111111111111111111111100000000 Q
xP
xO
b0 N
bx M
0L
xK
b0 J
b0 I
bx H
bx G
bx F
xE
bx D
xC
bx B
bx A
bx @
bx ?
bx >
bx =
b0 <
bx ;
b0 :
b0 9
x8
17
16
bx 5
04
bx 3
02
bx 1
00
x/
bx .
bx -
0,
bx +
x*
bx )
x(
b11111111111111111111111111111100 '
bx &
b0 %
0$
b0 #
b0 "
z!
$end
#10
b0 `
0b
#20
b100000 (#
#30
b0x S"
b0x T"
#100
06
#200
b100 u
b100 '#
b100 4#
bx ?
bx =
bx >
bx ;
b0 '"
b0 I"
b0 _"
bx ("
bx ]"
bx .#
bx )"
bx ^"
bx +#
bx $#
bx &#
bx l"
bx q"
bx t"
bx p"
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx 2"
bx 1#
b100 >"
b100 /#
bx 5
bx @
bx !"
bx +"
xB"
bx E"
bx 7"
x:"
x9"
bx000 -"
bx000 O"
bx 5"
bx ."
bx b"
bx 3"
bx -#
xh"
xc"
xe"
xg"
xd"
xf"
bx 0"
bx a"
bx ,#
bx /"
bx `"
bx )#
b11111111111111111111111111111100 ;"
bx 4"
bx i"
bx w"
16
#250
07
#300
06
#400
b11111111111111111111111111111100 <"
b11111111111111111111111111111100 *#
bx ?"
xR
xL
b0 ?
b0 =
b0 >
b0 ;
xC"
bx F"
bx "
bx :
bx r
bx 8"
bx #
bx <
bx q
bx 6"
bx %
bx 9
bx n
bx 1"
b0 5
b0 @
b0 !"
b0 +"
bx ,"
bx 0#
16
#410
b1 d
0e
0/
1f
12
b100 x
b100 J"
b0 \
b0 ]
b0 [
b0 B
0C
0E
1$
b100 w
b100 H"
b0 '
b0 ^
b0 *"
#420
b0 3
b0 g
b0 p
#500
06
#600
1l
10
0i
b0 1
b0 c
b0 k
1/
b1 d
b1 h
0$
16
#700
06
#800
16
#900
06
#1000
16
#1100
06
#1200
16
bx00010011 .
bx00010011 _
bx00010011 m
#1300
06
#1400
16
#1500
06
#1600
16
bx1000000000010011 .
bx1000000000010011 _
bx1000000000010011 m
#1700
06
#1800
16
#1900
06
#2000
16
bx010100001000000000010011 .
bx010100001000000000010011 _
bx010100001000000000010011 m
#2100
06
#2200
16
#2300
06
#2400
16
bx00000000010100001000000000010011 .
bx00000000010100001000000000010011 _
bx00000000010100001000000000010011 m
#2500
06
#2600
16
#2700
06
#2800
16
bx1001001100000000010100001000000000010011 .
bx1001001100000000010100001000000000010011 _
bx1001001100000000010100001000000000010011 m
#2900
06
#3000
16
#3100
06
#3200
16
bx100000001001001100000000010100001000000000010011 .
bx100000001001001100000000010100001000000000010011 _
bx100000001001001100000000010100001000000000010011 m
#3300
06
#3400
16
#3500
06
#3600
16
bx01100000100000001001001100000000010100001000000000010011 .
bx01100000100000001001001100000000010100001000000000010011 _
bx01100000100000001001001100000000010100001000000000010011 m
#3700
06
#3800
16
#3900
06
#4000
16
bx0000000001100000100000001001001100000000010100001000000000010011 .
bx0000000001100000100000001001001100000000010100001000000000010011 _
bx0000000001100000100000001001001100000000010100001000000000010011 m
#4100
06
#4200
16
#4300
06
#4400
16
bx100100110000000001100000100000001001001100000000010100001000000000010011 .
bx100100110000000001100000100000001001001100000000010100001000000000010011 _
bx100100110000000001100000100000001001001100000000010100001000000000010011 m
#4500
06
#4600
16
#4700
06
#4800
16
bx00000001100100110000000001100000100000001001001100000000010100001000000000010011 .
bx00000001100100110000000001100000100000001001001100000000010100001000000000010011 _
bx00000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#4900
06
#5000
16
#5100
06
#5200
16
bx0001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 .
bx0001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 _
bx0001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#5300
06
#5400
16
#5500
06
#5600
16
bx000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 .
bx000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 _
bx000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#5700
06
#5800
16
#5900
06
#6000
16
bx10010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 .
bx10010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 _
bx10010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#6100
06
#6200
16
#6300
06
#6400
16
bx0000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 .
bx0000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 _
bx0000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#6500
06
#6600
16
#6700
06
#6800
16
bx000100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 .
bx000100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 _
bx000100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#6900
06
#7000
16
#7100
06
#7200
0/
b0 h
1i
b1 d
16
0l
00
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 .
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 _
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000000010011 m
#7220
b10100001000000000010011 3
b10100001000000000010011 g
b10100001000000000010011 p
b0 a
b10100001000000000010011 `
1b
#7229
1e
b0 d
1Z
#7300
06
#7400
b1 $#
b101 &#
b10011 l"
b0 q"
b0 t"
b0 p"
b10100001000 ~"
b10100001000 }"
b101 |"
b0 {"
b0 z"
b0 y"
b0 ;"
b10100001000000000010011 4"
b10100001000000000010011 i"
b10100001000000000010011 w"
b0 v
b11111111111111111111111111111100 ="
bx @"
b0 u
b0 '#
b0 4#
b0 ,"
b0 0#
xD"
bx G"
bx 3#
0f
0e
02
16
#7410
1e
1f
12
b1000 x
b1000 J"
b1 \
1$
b1000 w
b1000 H"
b100 '
b100 ^
b100 *"
#7420
b11000001000000010010011 3
b11000001000000010010011 g
b11000001000000010010011 p
b0 #"
b0 ##
b0 ""
b0 %#
#7430
b101 ~
b101 !#
1y
b10 }
b10 o"
b10 x"
1t
0z
0j"
b0 %"
b0 r"
b0 &"
b0 s"
b0 {
b0 m"
b1 s
b1 k"
b0 |
b0 n"
#7500
06
#7600
b110 ~
b110 !#
b110 &#
b11000001000 ~"
b11000001000 }"
b110 |"
b1 {"
b1 z"
b100 ;"
b11000001000000010010011 4"
b11000001000000010010011 i"
b11000001000000010010011 w"
bx '"
bx I"
bx _"
b101 ("
b101 ]"
b101 .#
b0 )"
b0 ^"
b0 +#
1B"
b1 E"
b0 7"
b0 5"
1:"
09"
b0 -"
b0 O"
b0 ."
b0 b"
b101 3"
b101 -#
1h"
0c"
0e"
0g"
0d"
0f"
b0 0"
b0 a"
b0 ,#
b0 /"
b0 `"
b0 )#
b0 <"
b0 *#
b0 ?"
b0 >"
b0 /#
bx A"
bx "#
0f
0e
02
0$
16
#7610
1e
1f
12
b1100 x
b1100 J"
b10 \
b101 L"
1$
b1100 w
b1100 H"
b1000 '
b1000 ^
b1000 *"
#7620
b100000000000110010011 3
b100000000000110010011 g
b100000000000110010011 p
#7630
b101 '"
b101 I"
b101 _"
b1 S"
b1 T"
b101 N"
b101 M"
b0 K"
b11111111111111111111111111111011 P"
b101 \"
#7640
b0 R"
b0 Q"
b0 U"
#7680
b0 Z"
b0 X"
b0 Y"
#7700
06
#7800
b1 ~
b1 !#
b0 $#
b1 &#
b100000000 ~"
b100000000 }"
b1 |"
b11 {"
b11 z"
b1000 ;"
b100000000000110010011 4"
b100000000000110010011 i"
b100000000000110010011 w"
b110 ("
b110 ]"
b110 .#
b110 3"
b110 -#
b100 <"
b100 *#
b1 ?"
0R
0L
b11111111111111110000000011111111 Q
b1 ?
b1 =
1C"
b1 F"
b0 "
b0 :
b0 r
b0 8"
b0 #
b0 <
b0 q
b0 6"
b0 %
b0 9
b0 n
b0 1"
b101 5
b101 @
b101 !"
b101 +"
b100 v
b0 ="
b0 @"
0f
0e
02
0$
16
#7810
1e
1f
12
b10000 x
b10000 J"
b11 \
b110 L"
1$
b10000 w
b10000 H"
b1100 '
b1100 ^
b1100 *"
#7830
b110 '"
b110 I"
b110 _"
b110 N"
b110 M"
b11111111111111111111111111111010 P"
b110 \"
#7900
06
#8000
b1100 ;"
b1 ("
b1 ]"
b1 .#
b1 3"
b1 -#
b1000 <"
b1000 *#
b11 ?"
b11111111000000001111111111111111 Q
b10 ?
b110 5
b110 @
b110 !"
b110 +"
b1000 v
b100 ="
b1 @"
b101 u
b101 '#
b101 4#
b101 ,"
b101 0#
1D"
b1 G"
b1 3#
b100 >"
b100 /#
b0 A"
b0 "#
0f
0e
02
0$
16
#8010
1e
1f
12
b10100 x
b10100 J"
b0 \
b1 ]
b1 L"
1$
b10100 w
b10100 H"
b10000 '
b10000 ^
b10000 *"
#8020
0e
b1 d
b0 3
b0 g
b0 p
bx a
b0 `
0b
#8029
xZ
#8030
b1 '"
b1 I"
b1 _"
b1 N"
b1 M"
b11111111111111111111111111111111 P"
b1 \"
#8100
06
#8200
0i
1l
10
b1 1
b1 c
b1 k
1/
b1 d
b1 h
0$
16
#8220
b10100001000000000010011 3
b10100001000000000010011 g
b10100001000000000010011 p
b0 a
b10100001000000000010011 `
1b
b101 #"
b101 ##
#8229
1Z
#8300
06
#8400
16
#8500
06
#8600
16
#8700
06
#8800
16
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000010010011 .
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000010010011 _
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100001000000010010011 m
#8900
06
#9000
16
#9100
06
#9200
16
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100000000000110010011 .
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100000000000110010011 _
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000010100000000000110010011 m
#9300
06
#9400
16
#9500
06
#9600
16
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000000100000000000110010011 .
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000000100000000000110010011 _
b100000000000110010011000000000001000000000001100100110000000001100000100000001001001100000000000100000000000110010011 m
#9700
06
#9800
16
#9900
06
#10000
16
#10100
06
#10200
16
#10300
06
#10400
16
#10500
06
#10600
16
#10700
06
#10800
16
b100000000000110010011000000000001000000000001100100110000000001100000000000011001001100000000000100000000000110010011 .
b100000000000110010011000000000001000000000001100100110000000001100000000000011001001100000000000100000000000110010011 _
b100000000000110010011000000000001000000000001100100110000000001100000000000011001001100000000000100000000000110010011 m
#10900
06
#11000
16
#11100
06
#11200
16
b100000000000110010011000000000001000000000001100100110000000000010000000000011001001100000000000100000000000110010011 .
b100000000000110010011000000000001000000000001100100110000000000010000000000011001001100000000000100000000000110010011 _
b100000000000110010011000000000001000000000001100100110000000000010000000000011001001100000000000100000000000110010011 m
#11300
06
#11400
16
#11500
06
#11600
16
#11700
06
#11800
16
#11900
06
#12000
16
#12100
06
#12200
16
#12300
06
#12400
16
#12500
06
#12600
16
#12700
06
#12800
16
#12900
06
#13000
16
#13100
06
#13200
16
#13300
06
#13400
16
#13500
06
#13600
16
#13700
06
#13800
16
#13900
06
#14000
16
#14100
06
#14200
16
#14300
06
#14400
16
#14500
06
#14600
16
#14700
06
#14800
1e
0/
b0 h
1i
b0 d
16
0l
00
#14820
b100000000000110010011 3
b100000000000110010011 g
b100000000000110010011 p
b100000000000110010011 `
#14900
06
#15000
b10000 ;"
b101 )"
b101 ^"
b101 +#
0h"
1c"
1g"
1f"
b101 /"
b101 `"
b101 )#
b1100 <"
b1100 *#
b11111111111111110000000011111111 Q
b1 ?
b0 =
b1 5
b1 @
b1 !"
b1 +"
b1100 v
b1000 ="
b11 @"
b110 u
b110 '#
b110 4#
b110 ,"
b110 0#
b1000 >"
b1000 /#
b1 A"
b1 "#
0f
0e
02
16
#15010
1e
1f
12
b11000 x
b11000 J"
b1 \
1$
b11000 w
b11000 H"
b10100 '
b10100 ^
b10100 *"
#15020
b101 ""
b101 %#
#15030
b110 '"
b110 I"
b110 _"
b0 S"
b0 T"
b100 N"
b101 M"
b1 K"
b100 P"
b110 \"
#15040
b10 R"
b10 Q"
b1010 U"
#15080
b0 V"
b0 W"
b1 ["
b11001 X"
b11001 Y"
b101 Z"
#15100
06
#15200
b10100 ;"
1h"
0c"
0g"
0f"
b101 0"
b101 a"
b101 ,#
b10000 <"
b10000 *#
b1010000000000000000 I
b11111111000000001111111111111111 Q
b10 ?
b1 =
b101 %
b101 9
b101 n
b101 1"
b110 5
b110 @
b110 !"
b110 +"
b10000 v
b1100 ="
b1 u
b1 '#
b1 4#
b1 ,"
b1 0#
b1100 >"
b1100 /#
b11 A"
b11 "#
0f
0e
02
0$
16
#15210
1e
1f
12
b11100 x
b11100 J"
b10 \
1$
b11100 w
b11100 H"
b11000 '
b11000 ^
b11000 *"
#15300
06
#15400
b11000 ;"
b10100 <"
b10100 *#
b10100 v
b10000 ="
b110 u
b110 '#
b110 4#
b110 ,"
b110 0#
b10000 >"
b10000 /#
0f
0e
02
0$
16
#15410
1e
1f
12
b100000 x
b100000 J"
b11 \
1$
b100000 w
b100000 H"
b11100 '
b11100 ^
b11100 *"
#15500
06
#15600
b11100 ;"
b11000 <"
b11000 *#
b11000 v
b10100 ="
b10100 >"
b10100 /#
0f
0e
02
0$
16
#15610
1e
1f
12
b100100 x
b100100 J"
b0 \
b10 ]
1$
b100100 w
b100100 H"
b100000 '
b100000 ^
b100000 *"
#15620
0e
b1 d
b0 3
b0 g
b0 p
bx a
b0 `
0b
#15629
xZ
#15700
06
#15800
0i
1l
10
b10 1
b10 c
b10 k
1/
b1 d
b1 h
0$
16
#15820
b100000000000110010011 3
b100000000000110010011 g
b100000000000110010011 p
b0 a
b100000000000110010011 `
1b
#15829
1Z
#15900
06
#16000
16
#16100
06
#16200
16
#16300
06
#16400
16
b100000000000110010011000000000001000000000001100100110000000000010000000000011001001100000000000100000000000100110011 .
b100000000000110010011000000000001000000000001100100110000000000010000000000011001001100000000000100000000000100110011 _
b100000000000110010011000000000001000000000001100100110000000000010000000000011001001100000000000100000000000100110011 m
#16500
06
#16600
16
#16700
06
#16800
16
#16900
06
#17000
16
#17100
06
#17200
16
#17300
06
#17400
16
#17500
06
#17600
16
#17700
06
#17800
16
#17900
06
#18000
16
b10000000000011001001100000000000100000000000110010011000000000001000000000001xxxxxxxx00000000000100000000000100110011 .
b10000000000011001001100000000000100000000000110010011000000000001000000000001xxxxxxxx00000000000100000000000100110011 _
b10000000000011001001100000000000100000000000110010011000000000001000000000001xxxxxxxx00000000000100000000000100110011 m
#18100
06
#18200
16
#18300
06
#18400
16
b100000000000110010011000000000001000000000001100100110000000000010000xxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b100000000000110010011000000000001000000000001100100110000000000010000xxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b100000000000110010011000000000001000000000001100100110000000000010000xxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#18500
06
#18600
16
#18700
06
#18800
16
b1000000000001100100110000000000010000000000011001001100000000xxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b1000000000001100100110000000000010000000000011001001100000000xxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b1000000000001100100110000000000010000000000011001001100000000xxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#18900
06
#19000
16
#19100
06
#19200
16
b10000000000011001001100000000000100000000000110010011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b10000000000011001001100000000000100000000000110010011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b10000000000011001001100000000000100000000000110010011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#19300
06
#19400
16
#19500
06
#19600
16
b100000000000110010011000000000001000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b100000000000110010011000000000001000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b100000000000110010011000000000001000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#19700
06
#19800
16
#19900
06
#20000
16
b1000000000001100100110000000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b1000000000001100100110000000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b1000000000001100100110000000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#20100
06
#20200
16
#20300
06
#20400
16
b10000000000011001001100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b10000000000011001001100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b10000000000011001001100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#20500
06
#20600
16
#20700
06
#20800
16
b100000000000110010011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b100000000000110010011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b100000000000110010011xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#20900
06
#21000
16
#21100
06
#21200
16
b1000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b1000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b1000000000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#21300
06
#21400
16
#21500
06
#21600
16
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#21700
06
#21800
16
#21900
06
#22000
16
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 .
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 _
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000100000000000100110011 m
#22100
06
#22200
16
#22300
06
#22400
1e
0/
b0 h
1i
b0 d
16
0l
00
bx00000000000100000000000100110011 .
bx00000000000100000000000100110011 _
bx00000000000100000000000100110011 m
#22420
b100000000000100110011 3
b100000000000100110011 g
b100000000000100110011 p
b100000000000100110011 `
#22500
06
#22600
b110011 l"
b10 {"
b10 z"
b100000 ;"
b100000000000100110011 4"
b100000000000100110011 i"
b100000000000100110011 w"
b11100 <"
b11100 *#
b11100 v
b11000 ="
b11000 >"
b11000 /#
0f
0e
02
16
#22610
1e
1f
12
b101000 x
b101000 J"
b1 \
1$
b101000 w
b101000 H"
b100100 '
b100100 ^
b100100 *"
#22620
bx 3
bx g
bx p
#22630
b0xxx }
b0xxx o"
b0xxx x"
0y
#22700
06
#22800
b0xxx &"
b0xxx s"
bx v"
bx $#
bx &#
bx l"
bx q"
bx t"
bx p"
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
b100100 ;"
bx 4"
bx i"
bx w"
b101 ("
b101 ]"
b101 .#
0:"
b100000 <"
b100000 *#
b10 ?"
b100000 v
b11100 ="
b11100 >"
b11100 /#
0f
0e
02
0$
16
#22810
1e
1f
12
b101100 x
b101100 J"
b10 \
b101 L"
1$
b101100 w
b101100 H"
b101000 '
b101000 ^
b101000 *"
#22820
bx #"
bx ##
bx ""
bx %#
#22830
b0 v"
b1010 '"
b1010 I"
b1010 _"
xt
xj"
xz
xy
bx %"
bx r"
bx }
bx o"
bx x"
bx000 &"
bx000 s"
bx {
bx m"
bx s
bx k"
bx |
bx n"
b0 N"
b101 K"
b0 P"
b1010 \"
#22840
b0 R"
b0 Q"
b10100000 U"
#22880
b11001 Z"
#22900
06
#23000
b101000 ;"
b0 '"
b0 I"
b0 _"
bx ("
bx ]"
bx .#
bx )"
bx ^"
bx +#
xB"
bx E"
bx 7"
bx 5"
x:"
x9"
bx000 -"
bx000 O"
bx ."
bx b"
bx 0"
bx a"
bx ,#
xh"
xc"
xe"
xg"
xd"
xf"
bx /"
bx `"
bx )#
b100100 <"
b100100 *#
bx ?"
b10 =
b1010 5
b1010 @
b1010 !"
b1010 +"
b100100 v
b100000 ="
b10 @"
b100000 >"
b100000 /#
0f
0e
02
0$
16
#23010
1e
1f
12
b110000 x
b110000 J"
b11 \
bx L"
1$
b110000 w
b110000 H"
b101100 '
b101100 ^
b101100 *"
#23030
b0x S"
b0x T"
bx N"
bx M"
bx K"
bx P"
bx \"
#23040
bx R"
bx Q"
bx U"
#23080
bx V"
bx W"
bx ["
bx X"
bx Y"
bx Z"
#23100
06
#23200
b101100 ;"
b101000 <"
b101000 *#
xR
xL
b0 ?
b0 =
xC"
bx F"
bx "
bx :
bx r
bx 8"
bx #
bx <
bx q
bx 6"
bx %
bx 9
bx n
bx 1"
b0 5
b0 @
b0 !"
b0 +"
b101000 v
b100100 ="
bx @"
b1010 u
b1010 '#
b1010 4#
b1010 ,"
b1010 0#
b100100 >"
b100100 /#
b10 A"
b10 "#
0f
0e
02
0$
16
#23210
1e
1f
12
b110100 x
b110100 J"
b0 \
b11 ]
1$
b110100 w
b110100 H"
b110000 '
b110000 ^
b110000 *"
#23220
0e
b1 d
b0 3
b0 g
b0 p
bx a
b0 `
0b
#23229
xZ
#23300
06
#23400
0i
1l
10
b11 1
b11 c
b11 k
1/
b1 d
b1 h
0$
16
#23420
b100000000000100110011 3
b100000000000100110011 g
b100000000000100110011 p
b0 a
b100000000000100110011 `
1b
#23429
1Z
#23500
06
#23600
16
#23700
06
#23800
16
#23900
06
#24000
16
bx000000000001000000000001xxxxxxxx .
bx000000000001000000000001xxxxxxxx _
bx000000000001000000000001xxxxxxxx m
#24100
06
#24200
16
#24300
06
#24400
16
bx0000000000010000xxxxxxxxxxxxxxxx .
bx0000000000010000xxxxxxxxxxxxxxxx _
bx0000000000010000xxxxxxxxxxxxxxxx m
#24500
06
#24600
16
#24700
06
#24800
16
bx00000000xxxxxxxxxxxxxxxxxxxxxxxx .
bx00000000xxxxxxxxxxxxxxxxxxxxxxxx _
bx00000000xxxxxxxxxxxxxxxxxxxxxxxx m
#24900
06
#25000
16
#25100
06
#25200
16
bx .
bx _
bx m
#25300
06
#25400
16
#25500
06
#25600
16
#25700
06
#25800
16
#25900
06
#26000
16
#26100
06
#26200
16
#26300
06
#26400
16
#26500
06
#26600
16
#26700
06
#26800
16
#26900
06
#27000
16
#27100
06
#27200
16
#27300
06
#27400
16
#27500
06
#27600
16
#27700
06
#27800
16
#27900
06
#28000
16
#28100
06
#28200
16
#28300
06
#28400
16
#28500
06
#28600
16
#28700
06
#28800
16
#28900
06
#29000
16
#29100
06
#29200
16
#29300
06
#29400
16
#29500
06
#29600
16
#29700
06
#29800
16
#29900
06
#30000
1e
0/
b0 h
1i
b0 d
16
0l
00
#30020
bx 3
bx g
bx p
bx `
#30100
06
#30200
b110000 ;"
b101100 <"
b101100 *#
b101100 v
b101000 ="
b0 u
b0 '#
b0 4#
b0 ,"
b0 0#
xD"
bx G"
bx 3#
b101000 >"
b101000 /#
bx A"
bx "#
0f
0e
02
16
#30210
1e
1f
12
b111000 x
b111000 J"
b1 \
1$
b111000 w
b111000 H"
b110100 '
b110100 ^
b110100 *"
#30250
